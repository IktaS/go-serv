// Code generated by gocc; DO NOT EDIT.

package parser

import "github.com/go-serv/internal/compiler/ast"

type (
	ProdTab      [numProductions]ProdTabEntry
	ProdTabEntry struct {
		String     string
		Id         string
		NTType     int
		Index      int
		NumSymbols int
		ReduceFunc func([]Attrib) (Attrib, error)
	}
	Attrib interface {
	}
)

var productionsTable = ProdTab{
	ProdTabEntry{
		String: `S' : World	<<  >>`,
		Id:         "S'",
		NTType:     0,
		Index:      0,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `World : Animals	<< ast.NewWorld(X[0]) >>`,
		Id:         "World",
		NTType:     1,
		Index:      1,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.NewWorld(X[0])
		},
	},
	ProdTabEntry{
		String: `Animals : Animals Animal	<< ast.AppendAnimals(X[0], X[1]) >>`,
		Id:         "Animals",
		NTType:     2,
		Index:      2,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.AppendAnimals(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Animals : empty	<< ast.NewAnimalList() >>`,
		Id:         "Animals",
		NTType:     2,
		Index:      3,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.NewAnimalList()
		},
	},
	ProdTabEntry{
		String: `Animal : id	<< ast.NewAnimal(X[0]) >>`,
		Id:         "Animal",
		NTType:     3,
		Index:      4,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.NewAnimal(X[0])
		},
	},
}
